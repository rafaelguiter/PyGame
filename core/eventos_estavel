import pygame
from entidades.lixo import gerar_lixo
from fases.fase import desbloquear_proxima_fase

def processar_eventos(jogo, eventos):
    for evento in eventos:
        if evento.type == pygame.QUIT:
            jogo.rodando = False

        elif evento.type == pygame.MOUSEBUTTONDOWN:
            if jogo.modo == "menu":
                if jogo.rect_start.collidepoint(evento.pos):
                    jogo.sons["frente"].play()
                    if not jogo.tutorial_visto:
                        jogo.modo = "tutorial"
                        jogo.tutorial_pagina = 0
                        jogo.tutorial_visto = True
                    else:
                        jogo.modo = "mapa"
                elif jogo.rect_opcoes.collidepoint(evento.pos):
                    jogo.sons["frente"].play()
            elif jogo.modo == "tutorial":
                if evento.pos[0] < jogo.LARGURA // 2:
                    jogo.tutorial_pagina = max(0, jogo.tutorial_pagina - 1)
                    jogo.sons["voltar"].play()
                else:
                    jogo.tutorial_pagina += 1
                    jogo.sons["frente"].play()
                    if jogo.tutorial_pagina > 3:
                        jogo.modo = "mapa"
            elif jogo.modo == "mapa":
                for i, rect in enumerate(jogo.fase_rects):
                    if rect.collidepoint(evento.pos) and jogo.fases_desbloqueadas[i]:
                        jogo.sons["ganhou"].play()
                        jogo.fase_atual = i + 1
                        jogo.iniciar_fase(jogo.fase_atual)
                        jogo.modo = "jogo"
                if jogo.rect_voltar_menu.collidepoint(evento.pos):
                    jogo.sons["voltar"].play()
                    jogo.modo = "menu"
            elif jogo.modo == "jogo":
                if jogo.em_pausa:
                    if jogo.rect_pausado_continuar.collidepoint(evento.pos):
                        jogo.em_pausa = False
                elif jogo.menu_aberto:
                    if jogo.rect_menu_pause.collidepoint(evento.pos):
                        jogo.sons["voltar"].play()
                        jogo.em_pausa = True
                        jogo.menu_aberto = False
                    elif jogo.rect_menu_voltar.collidepoint(evento.pos):
                        jogo.sons["voltar"].play()
                        jogo.modo = "mapa"
                        jogo.menu_aberto = False
                elif jogo.rect_menu_jogo.collidepoint(evento.pos):
                    jogo.sons["frente"].play()
                    jogo.menu_aberto = True
                elif jogo.lixo_rect.collidepoint(evento.pos):
                    jogo.arrastando = True
                    jogo.offset_x = jogo.lixo_rect.x - evento.pos[0]
                    jogo.offset_y = jogo.lixo_rect.y - evento.pos[1]

        elif evento.type == pygame.MOUSEBUTTONUP:
            if jogo.modo == "jogo" and jogo.arrastando and not jogo.em_pausa:
                jogo.arrastando = False
                lixo_colocado = False
                for tipo, rect in jogo.lixeiras.items():
                    if rect.colliderect(jogo.lixo_rect):
                        lixo_colocado = True
                        if tipo == jogo.lixo_atual[1]:
                            jogo.pontuacao += 10
                            jogo.acertos += 1
                            jogo.brilho_lixeira = (rect.copy(), (0, 255, 0), 30)
                            jogo.sons["acerto"].play()
                        else:
                            jogo.pontuacao -= 5
                            jogo.erros += 1
                            jogo.brilho_lixeira = (rect.copy(), (255, 0, 0), 30)
                            jogo.sons["erro"].play()
                        jogo.lixos_restantes -= 1
                        if jogo.lixos_restantes > 0:
                            jogo.lixo_atual = gerar_lixo()
                            jogo.lixo_rect.x = 300
                            jogo.lixo_rect.y = 200
                        else:
                            venceu = desbloquear_proxima_fase(jogo.fases_desbloqueadas, jogo.fase_atual, jogo.acertos, jogo.max_lixos)
                            if venceu:
                                jogo.sons["ganhou"].play()
                            else:
                                jogo.sons["perdeu"].play()
                            jogo.modo = "mapa"
                        break
                if not lixo_colocado:
                    jogo.lixo_rect.x = 300
                    jogo.lixo_rect.y = 200

        elif evento.type == pygame.MOUSEMOTION:
            if jogo.modo == "jogo" and jogo.arrastando and not jogo.em_pausa:
                jogo.lixo_rect.x = evento.pos[0] + jogo.offset_x
                jogo.lixo_rect.y = evento.pos[1] + jogo.offset_y